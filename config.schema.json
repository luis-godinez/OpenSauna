{
  "pluginAlias": "OpenSauna",
  "pluginType": "platform",
  "singular": true,
  "schema": {
    "type": "object",
    "properties": {
      "platform": {
        "title": "Platform Name",
        "type": "string",
        "enum": ["OpenSauna"],
        "default": "OpenSauna",
        "description": "Name of the platform, should be 'OpenSauna'."
      },
      "name": {
        "title": "Name",
        "type": "string",
        "description": "OpenSauna"
      },
      "hasSauna": {
        "title": "Has Sauna",
        "type": "boolean",
        "description": "Indicates if the sauna is present."
      },
      "hasSaunaSplitPhase": {
        "title": "Has Sauna Split Phase",
        "type": "boolean",
        "description": "Indicates if the sauna uses split phase power."
      },
      "hasSteam": {
        "title": "Has Steam Room",
        "type": "boolean",
        "description": "Indicates if the steam room is present."
      },
      "hasSteamSplitPhase": {
        "title": "Has Steam Room Split Phase",
        "type": "boolean",
        "description": "Indicates if the steam room uses split phase power."
      },
      "hasLight": {
        "title": "Has Light",
        "type": "boolean",
        "description": "Indicates if a light control is available."
      },
      "hasFan": {
        "title": "Has Fan",
        "type": "boolean",
        "description": "Indicates if a fan control is available."
      },
      "inverseSaunaDoor": {
        "title": "Inverse Sauna Door",
        "type": "boolean",
        "description": "If true, door sensor logic is inverted for the sauna."
      },
      "inverseSteamDoor": {
        "title": "Inverse Steam Door",
        "type": "boolean",
        "description": "If true, door sensor logic is inverted for the steam room."
      },
      "temperatureUnitFahrenheit": {
        "title": "Temperature Unit Fahrenheit",
        "type": "boolean",
        "description": "If true, temperatures are in Fahrenheit; otherwise, Celsius."
      },
      "gpioPins": {
        "type": "object",
        "title": "GPIO Configuration",
        "properties": {
          "saunaPowerPins": {
            "title": "Sauna Power Pins",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "GPIO pins for sauna power control."
          },
          "steamPowerPins": {
            "title": "Steam Power Pins",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "GPIO pins for steam room power control."
          },
          "lightPin": {
            "title": "Light Pin",
            "type": "integer",
            "description": "GPIO pin for light control (optional).",
            "nullable": true
          },
          "fanPin": {
            "title": "Fan Pin",
            "type": "integer",
            "description": "GPIO pin for fan control (optional).",
            "nullable": true
          },
          "saunaDoorPin": {
            "title": "Sauna Door Pin",
            "type": "integer",
            "description": "GPIO pin for sauna door sensor (optional).",
            "nullable": true
          },
          "steamDoorPin": {
            "title": "Steam Door Pin",
            "type": "integer",
            "description": "GPIO pin for steam door sensor (optional).",
            "nullable": true
          }
        }
      },
      "auxSensors": {
        "type": "array",
        "title": "Auxiliary Sensors",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "title": "Sensor Name",
              "type": "string",
              "description": "Name of the auxiliary sensor."
            },
            "channel": {
              "title": "Channel",
              "type": "integer",
              "description": "ADC channel number associated with the sensor."
            },
            "system": {
              "title": "System Association",
              "type": "string",
              "enum": ["sauna", "steam", "controller", null],
              "description": "The sensor to system association, or null if not associated."
            },
            "control": {
              "title": "Control Logic",
              "type": "boolean",
              "description": "Whether the sensor affects control logic (e.g., turns off power if overheating)."
            }
          },
          "required": ["name", "channel", "system", "control"]
        }
      },
      "targetTemperatures": {
        "type": "object",
        "title": "Target Temperatures",
        "properties": {
          "sauna": {
            "title": "Sauna Temperature",
            "type": "number",
            "description": "Target temperature for the sauna in degrees."
          },
          "steam": {
            "title": "Steam Temperature",
            "type": "number",
            "description": "Target temperature for the steam room in degrees."
          }
        }
      },
      "saunaOnWhileDoorOpen": {
        "title": "Sauna On While Door Open",
        "type": "boolean",
        "description": "Allows the sauna to be on while the door is open."
      },
      "steamOnWhileDoorOpen": {
        "title": "Steam On While Door Open",
        "type": "boolean",
        "description": "Allows the steam room to be on while the door is open."
      },
      "saunaTimeout": {
        "title": "Sauna Timeout",
        "type": "number",
        "description": "Maximum runtime for the sauna in minutes before auto-shutdown."
      },
      "steamTimeout": {
        "title": "Steam Timeout",
        "type": "number",
        "description": "Maximum runtime for the steam room in minutes before auto-shutdown."
      },
      "saunaMaxTemperature": {
        "title": "Sauna Max Temperature",
        "type": "number",
        "description": "Maximum user-configurable temperature for the sauna in degrees."
      },
      "steamMaxTemperature": {
        "title": "Steam Max Temperature",
        "type": "number",
        "description": "Maximum user-configurable temperature for the steam room in degrees."
      },
      "steamMaxHumidity": {
        "title": "Steam Max Humidity",
        "type": "number",
        "description": "Maximum user-configurable humidity for the steam room in percent."
      },
      "saunaSafetyTemperature": {
        "title": "Sauna Safety Temperature",
        "type": "number",
        "description": "Safety limit for sauna temperature in degrees (hard-coded)."
      },
      "steamSafetyTemperature": {
        "title": "Steam Safety Temperature",
        "type": "number",
        "description": "Safety limit for steam room temperature in degrees (hard-coded)."
      },
      "controllerSafetyTemperature": {
        "title": "Controller Safety Temperature",
        "type": "number",
        "description": "Safety limit for the controller board temperature in degrees (hard-coded)."
      }
    },
    "required": [
      "platform",
      "name",
      "hasSauna",
      "hasSaunaSplitPhase",
      "hasSteam",
      "hasSteamSplitPhase",
      "hasLight",
      "hasFan",
      "inverseSaunaDoor",
      "inverseSteamDoor",
      "temperatureUnitFahrenheit",
      "gpioPins",
      "auxSensors",
      "targetTemperatures",
      "saunaOnWhileDoorOpen",
      "steamOnWhileDoorOpen",
      "saunaTimeout",
      "steamTimeout",
      "saunaMaxTemperature",
      "steamMaxTemperature",
      "steamMaxHumidity",
      "saunaSafetyTemperature",
      "steamSafetyTemperature",
      "controllerSafetyTemperature"
    ]
  }
}